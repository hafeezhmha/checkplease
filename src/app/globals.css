@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes print {
  from { 
    transform: translateY(-20px); 
    opacity: 0; 
  }
  to { 
    transform: translateY(0); 
    opacity: 1; 
  }
}

.receipt-container {
  position: relative;
  padding: 1px;
  background: #fff;
  transform: rotate(var(--receipt-rotation, -0.5deg));
  filter: drop-shadow(0 6px 12px rgba(0, 0, 0, 0.15));
  border-radius: 4px;
}

.receipt-container::before,
.receipt-container::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 6px;
  background: linear-gradient(45deg, transparent 33.333%, #fff 33.333%, #fff 66.667%, transparent 66.667%);
  background-size: 12px 6px;
}

.receipt-container::before {
  top: -6px;
}

.receipt-container::after {
  bottom: -6px;
  transform: rotate(180deg);
}

.receipt-content {
  position: relative;
  background-color: #fcfcfc;
  background-image: 
    radial-gradient(circle at 50% 0%, rgba(255,255,255,.3) 0%, rgba(0,0,0,.03) 70%, rgba(0,0,0,.03) 90%),
    repeating-linear-gradient(
      0deg,
      #fcfcfc,
      #fcfcfc 28px,
      rgba(0, 0, 0, 0.01) 28px,
      rgba(0, 0, 0, 0.01) 29px
    );
  box-shadow: 
    inset 0 0 30px rgba(0,0,0,0.01),
    0 1px 1px rgba(0,0,0,0.03),
    0 2px 2px rgba(0,0,0,0.03),
    0 4px 4px rgba(0,0,0,0.03),
    0 8px 8px rgba(0,0,0,0.03);
  animation: print 0.8s ease-out;
  overflow: hidden;
  border-radius: 2px;
}

/* Fold marks */
.receipt-content::before,
.receipt-content::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  height: 1px;
  background: rgba(0,0,0,0.03);
}

.receipt-content::before {
  top: 33%;
}

.receipt-content::after {
  top: 66%;
}

/* Coffee stain */
.coffee-stain {
  position: absolute;
  top: 70%;
  right: 10%;
  width: 90px;
  height: 90px;
  background: radial-gradient(
    ellipse at center,
    rgba(139, 69, 19, 0.03) 0%,
    rgba(139, 69, 19, 0.02) 50%,
    transparent 70%
  );
  border-radius: 50%;
  transform: rotate(-8deg) scale(1.6);
  opacity: 0.8;
  pointer-events: none;
  filter: blur(0.5px);
}

/* Additional coffee drip */
.coffee-stain::after {
  content: '';
  position: absolute;
  top: -12px;
  left: 35%;
  width: 25px;
  height: 45px;
  background: radial-gradient(
    ellipse at center,
    rgba(139, 69, 19, 0.02) 0%,
    transparent 70%
  );
  border-radius: 50%;
  transform: rotate(-20deg);
}

/* Edge fading and texture */
.receipt-fade {
  position: absolute;
  inset: 0;
  background: 
    linear-gradient(
      to right,
      rgba(255,255,255,0.1) 0%,
      transparent 5%,
      transparent 95%,
      rgba(255,255,255,0.1) 100%
    ),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.005'/%3E%3C/svg%3E");
  pointer-events: none;
  mix-blend-mode: overlay;
  opacity: 0.7;
}

/* Wrinkle effect */
.receipt-content::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    repeating-radial-gradient(
      circle at 50% 50%,
      transparent 0,
      rgba(0, 0, 0, 0.005) 1px,
      transparent 2px
    );
  pointer-events: none;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(rgb(var(--background-start-rgb)), rgb(var(--background-end-rgb)));
}

.game-background {
  --square-size: 30px;
  --color-1: #222;
  --color-2: #2a2a2a;
  background-image:
    linear-gradient(45deg, var(--color-1) 25%, transparent 25%, transparent 75%, var(--color-1) 75%, var(--color-1)),
    linear-gradient(45deg, var(--color-1) 25%, transparent 25%, transparent 75%, var(--color-1) 75%, var(--color-1));
  background-color: var(--color-2);
  background-size: var(--square-size) var(--square-size);
  background-position: 0 0, calc(var(--square-size) / 2) calc(var(--square-size) / 2);
}
